// src/utils/statusUtils.js - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
import {
  LEAD_STATUSES,
  CLIENT_STATUSES,
  CLIENT_STATUS_LABELS,
  LEAD_STATUS_LABELS,
  CLIENT_STATUS_LABELS_ONLY,
  STATUS_GROUPS
} from '../constants';

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å —Å—Ç–∞—Ç—É—Å–æ–º –ª–∏–¥–∞
 * @param {string} status - —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {boolean}
 */
export const isLeadStatus = (status) => {
  return LEAD_STATUSES.includes(status);
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å —Å—Ç–∞—Ç—É—Å–æ–º –∫–ª–∏–µ–Ω—Ç–∞
 * @param {string} status - —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {boolean}
 */
export const isClientStatus = (status) => {
  return CLIENT_STATUSES.includes(status);
};

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≥—Ä—É–ø–ø—É —Å—Ç–∞—Ç—É—Å–∞ (lead, client –∏–ª–∏ unknown)
 * @param {string} status - —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {string} - 'lead', 'client' –∏–ª–∏ 'unknown'
 */
export const getStatusGroup = (status) => {
  if (isLeadStatus(status)) return 'lead';
  if (isClientStatus(status)) return 'client';
  return 'unknown';
};

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –∑–∞–ø–∏—Å–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} status - —Å—Ç–∞—Ç—É—Å –∑–∞–ø–∏—Å–∏
 * @returns {string} - '–õ–∏–¥', '–ö–ª–∏–µ–Ω—Ç' –∏–ª–∏ '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
 */
export const getRecordTypeName = (status) => {
  const group = getStatusGroup(status);
  switch (group) {
    case 'lead': return '–õ–∏–¥';
    case 'client': return '–ö–ª–∏–µ–Ω—Ç';
    default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  }
};

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ª–µ–π–±–ª—ã —Å—Ç–∞—Ç—É—Å–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 * @param {string} context - 'leads', 'clients' –∏–ª–∏ 'all'
 * @returns {object} - –æ–±—ä–µ–∫—Ç —Å –ª–µ–π–±–ª–∞–º–∏ —Å—Ç–∞—Ç—É—Å–æ–≤
 */
export const getStatusLabelsForContext = (context) => {
  switch (context) {
    case STATUS_GROUPS.LEADS:
      return LEAD_STATUS_LABELS;
    case STATUS_GROUPS.CLIENTS:
      return CLIENT_STATUS_LABELS_ONLY;
    case STATUS_GROUPS.ALL:
    default:
      return CLIENT_STATUS_LABELS; // –í—Å–µ —Å—Ç–∞—Ç—É—Å—ã (–ª–∏–¥—ã + –∫–ª–∏–µ–Ω—Ç—ã)
  }
};

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 * @param {string} context - 'leads', 'clients' –∏–ª–∏ 'all'
 * @returns {array} - –º–∞—Å—Å–∏–≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
 */
export const getAvailableStatusesForContext = (context) => {
  switch (context) {
    case STATUS_GROUPS.LEADS:
      return LEAD_STATUSES;
    case STATUS_GROUPS.CLIENTS:
      return CLIENT_STATUSES;
    case STATUS_GROUPS.ALL:
    default:
      return [...LEAD_STATUSES, ...CLIENT_STATUSES]; // –í—Å–µ —Å—Ç–∞—Ç—É—Å—ã
  }
};

/**
 * –§–∏–ª—å—Ç—Ä—É–µ—Ç –∑–∞–ø–∏—Å–∏ –ø–æ –≥—Ä—É–ø–ø–µ —Å—Ç–∞—Ç—É—Å–æ–≤
 * @param {array} records - –º–∞—Å—Å–∏–≤ –∑–∞–ø–∏—Å–µ–π
 * @param {string} statusGroup - 'leads', 'clients' –∏–ª–∏ 'all'
 * @returns {array} - –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –∑–∞–ø–∏—Å–µ–π
 */
export const filterRecordsByStatusGroup = (records, statusGroup) => {
  if (!records || !Array.isArray(records)) return [];

  switch (statusGroup) {
    case STATUS_GROUPS.LEADS:
      return records.filter(record => isLeadStatus(record.status));
    case STATUS_GROUPS.CLIENTS:
      return records.filter(record => isClientStatus(record.status));
    case STATUS_GROUPS.ALL:
    default:
      return records;
  }
};

/**
 * üîß –û–ë–ù–û–í–õ–ï–ù–û: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 * @param {string} context - 'leads', 'clients' –∏–ª–∏ 'all'
 * @returns {string} - –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å
 */
export const getDefaultStatusForContext = (context) => {
  switch (context) {
    case STATUS_GROUPS.LEADS:
      return 'CREATED'; // –ü–µ—Ä–≤—ã–π —Å—Ç–∞—Ç—É—Å –≤ –≤–æ—Ä–æ–Ω–∫–µ –ª–∏–¥–æ–≤
    case STATUS_GROUPS.CLIENTS:
      return 'IN_PROGRESS'; // –ü–µ—Ä–≤—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    case STATUS_GROUPS.ALL:
    default:
      return 'CREATED'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞–µ–º –ª–∏–¥–∞ (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –ª—é–±–æ–π)
  }
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –∑–∞–ø–∏—Å—å –±—ã—Ç—å –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–∞ –∏–∑ –æ–¥–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –≤ –¥—Ä—É–≥–æ–π
 * @param {string} fromStatus - —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
 * @param {string} toStatus - —Ü–µ–ª–µ–≤–æ–π —Å—Ç–∞—Ç—É—Å
 * @returns {boolean} - –º–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
 */
export const canTransitionStatus = (fromStatus, toStatus) => {
  const fromGroup = getStatusGroup(fromStatus);
  const toGroup = getStatusGroup(toStatus);

  // üîß –û–ë–ù–û–í–õ–ï–ù–û: –†–∞–∑—Ä–µ—à–∞–µ–º –ª—é–±—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ç–∞—Ç—É—Å–æ–≤
  // 1. –í–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã (–ª–∏–¥ -> –ª–∏–¥, –∫–ª–∏–µ–Ω—Ç -> –∫–ª–∏–µ–Ω—Ç)
  // 2. –ò–∑ –ª–∏–¥–æ–≤ –≤ –∫–ª–∏–µ–Ω—Ç—ã (–∫–æ–Ω–≤–µ—Ä—Å–∏—è)
  // 3. –ò–∑ –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ–±—Ä–∞—Ç–Ω–æ –≤ –ª–∏–¥—ã (—Ä–µ–¥–∫–∏–π —Å–ª—É—á–∞–π, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ)
  return true; // –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –ø–µ—Ä–µ–≤–æ–¥—ã
};

/**
 * üÜï –ù–û–í–û–ï: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç–∞—Ç—É—Å—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ
 * @param {string} currentStatus - —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
 * @returns {array} - –º–∞—Å—Å–∏–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —Å–ª–µ–¥—É—é—â–∏—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
 */
export const getRecommendedNextStatuses = (currentStatus) => {
  // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è –ª–∏–¥–æ–≤
  const leadFlow = ['CREATED', 'DISTRIBUTION', 'GIVE_ACCESS'];
  // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–ª–∏–µ–Ω—Ç—ã
  const clientFlow = ['IN_PROGRESS', 'SEARCH_OFFER', 'ACCEPT_OFFER', 'PAYING_OFFER', 'FINISH'];

  if (isLeadStatus(currentStatus)) {
    const currentIndex = leadFlow.indexOf(currentStatus);
    const recommended = [];

    // –°–ª–µ–¥—É—é—â–∏–π —Å—Ç–∞—Ç—É—Å –≤ –≤–æ—Ä–æ–Ω–∫–µ –ª–∏–¥–æ–≤
    if (currentIndex >= 0 && currentIndex < leadFlow.length - 1) {
      recommended.push(leadFlow[currentIndex + 1]);
    }

    // –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∫–ª–∏–µ–Ω—Ç—ã (–æ—Å–æ–±–µ–Ω–Ω–æ —Å GIVE_ACCESS)
    if (currentStatus === 'GIVE_ACCESS') {
      recommended.push('IN_PROGRESS'); // –ù–∞—á–∞–ª –æ–±—É—á–µ–Ω–∏–µ
    }

    return recommended;
  }

  if (isClientStatus(currentStatus)) {
    const currentIndex = clientFlow.indexOf(currentStatus);
    const recommended = [];

    // –°–ª–µ–¥—É—é—â–∏–π —Å—Ç–∞—Ç—É—Å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è
    if (currentIndex >= 0 && currentIndex < clientFlow.length - 1) {
      recommended.push(clientFlow[currentIndex + 1]);
    }

    return recommended;
  }

  return [];
};

/**
 * üÜï –ù–û–í–û–ï: –ü–æ–ª—É—á–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} status - —Å—Ç–∞—Ç—É—Å
 * @returns {object} - –æ–±—ä–µ–∫—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ
 */
export const getStatusInfo = (status) => {
  const group = getStatusGroup(status);
  const label = CLIENT_STATUS_LABELS[status] || status;

  return {
    status,
    label,
    group,
    groupName: group === 'lead' ? '–õ–∏–¥' : group === 'client' ? '–ö–ª–∏–µ–Ω—Ç' : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
    isLeadStatus: isLeadStatus(status),
    isClientStatus: isClientStatus(status),
    recommendedNext: getRecommendedNextStatuses(status)
  };
};