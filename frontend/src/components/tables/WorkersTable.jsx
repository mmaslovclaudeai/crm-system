// src/components/tables/WorkersTable.jsx - –¢–∞–±–ª–∏—Ü–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
import { useState } from 'react';
import {
  Plus,
  Edit2,
  Trash2,
  User,
  Phone,
  Calendar,
  CreditCard,
  Building2,
  MessageCircle,
  CheckCircle,
  XCircle,
  DollarSign,
  BarChart3,
  Loader2,
  Search,
  Filter
} from 'lucide-react';
import { useAuthContext } from '../../context/AuthContext';
import { WORKER_SEARCH_FILTERS } from '../../constants';

const WorkersTable = ({
  workers = [],
  loading = false,
  searchTerm = '',
  onSearchChange,
  onAddWorker,
  onEditWorker,
  onDeleteWorker,
  onViewWorkerStats,
  onViewWorkerFinances
}) => {
  const { user } = useAuthContext();
  const [searchFilter, setSearchFilter] = useState(WORKER_SEARCH_FILTERS.NAME);

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
  const formatDate = (dateString) => {
    if (!dateString) return '‚Äî';
    return new Date(dateString).toLocaleDateString('ru-RU');
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–∂–∞ —Ä–∞–±–æ—Ç—ã
  const formatWorkExperience = (hireDate, fireDate = null) => {
    const startDate = new Date(hireDate);
    const endDate = fireDate ? new Date(fireDate) : new Date();

    const diffTime = Math.abs(endDate - startDate);
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

    const years = Math.floor(diffDays / 365);
    const months = Math.floor((diffDays % 365) / 30);

    if (years > 0) {
      return `${years} –ª–µ—Ç ${months} –º–µ—Å.`;
    } else if (months > 0) {
      return `${months} –º–µ—Å.`;
    } else {
      return `${diffDays} –¥–Ω.`;
    }
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–º–º—ã
  const formatAmount = (amount) => {
    const formatted = Number(amount).toLocaleString('ru-RU');
    return `${formatted} ‚ÇΩ`;
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞
  const getWorkerStatusBadge = (worker) => {
    if (worker.is_active) {
      return (
        <span className="inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">
          <CheckCircle className="w-3 h-3 mr-1" />
          –ê–∫—Ç–∏–≤–µ–Ω
        </span>
      );
    } else {
      return (
        <span className="inline-flex items-center px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800">
          <XCircle className="w-3 h-3 mr-1" />
          –£–≤–æ–ª–µ–Ω
        </span>
      );
    }
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
  const canEdit = user?.role === 'admin' || user?.role === 'manager';
  const canDelete = user?.role === 'admin';

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
  const handleDelete = (worker) => {
    if (worker.transactions_count > 0) {
      alert(`–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ ${worker.full_name}. –£ –Ω–µ–≥–æ –µ—Å—Ç—å ${worker.transactions_count} —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.`);
      return;
    }

    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ "${worker.full_name}"?`)) {
      onDeleteWorker(worker.id);
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center py-12">
        <Loader2 className="w-8 h-8 animate-spin text-blue-600" />
        <span className="ml-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤...</span>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* üîç –ü–û–ò–°–ö–û–í–ê–Ø –ü–ê–ù–ï–õ–¨ */}
      <div className="flex flex-col sm:flex-row gap-4 items-center justify-between">
        <div className="flex flex-1 items-center space-x-4">
          {/* –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ */}
          <div className="relative flex-1 max-w-md">
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <Search className="h-5 w-5 text-gray-400" />
            </div>
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤..."
              value={searchTerm}
              onChange={(e) => onSearchChange(e.target.value)}
              className="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
            />
          </div>

          {/* –§–∏–ª—å—Ç—Ä –ø–æ–∏—Å–∫–∞ */}
          <div className="relative">
            <select
              value={searchFilter}
              onChange={(e) => setSearchFilter(e.target.value)}
              className="appearance-none bg-white border border-gray-300 rounded-md px-4 py-2 pr-8 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
            >
              <option value={WORKER_SEARCH_FILTERS.NAME}>–ü–æ –∏–º–µ–Ω–∏</option>
              <option value={WORKER_SEARCH_FILTERS.POSITION}>–ü–æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏</option>
              <option value={WORKER_SEARCH_FILTERS.TELEGRAM}>–ü–æ Telegram</option>
            </select>
            <div className="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
              <Filter className="h-4 w-4 text-gray-400" />
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
        {canEdit && (
          <button
            onClick={onAddWorker}
            className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
          >
            <Plus className="w-4 h-4 mr-2" />
            –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞
          </button>
        )}
      </div>

      {/* üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div className="bg-white overflow-hidden shadow rounded-lg">
          <div className="p-5">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <User className="h-6 w-6 text-gray-400" />
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 truncate">
                    –í—Å–µ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
                  </dt>
                  <dd className="text-lg font-medium text-gray-900">
                    {workers.length}
                  </dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div className="bg-white overflow-hidden shadow rounded-lg">
          <div className="p-5">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <CheckCircle className="h-6 w-6 text-green-400" />
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 truncate">
                    –ê–∫—Ç–∏–≤–Ω—ã—Ö
                  </dt>
                  <dd className="text-lg font-medium text-gray-900">
                    {workers.filter(w => w.is_active).length}
                  </dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div className="bg-white overflow-hidden shadow rounded-lg">
          <div className="p-5">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <DollarSign className="h-6 w-6 text-blue-400" />
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 truncate">
                    –û–±—â–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞
                  </dt>
                  <dd className="text-lg font-medium text-gray-900">
                    {formatAmount(workers.reduce((sum, w) => sum + (w.total_salary_paid || 0), 0))}
                  </dd>
                </dl>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* üìã –¢–ê–ë–õ–ò–¶–ê –†–ê–ë–û–¢–ù–ò–ö–û–í */}
      {workers.length === 0 ? (
        <div className="text-center py-12">
          <User className="mx-auto h-12 w-12 text-gray-400" />
          <h3 className="mt-2 text-sm font-medium text-gray-900">–ù–µ—Ç —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤</h3>
          <p className="mt-1 text-sm text-gray-500">
            {searchTerm ? '–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.' : '–ù–∞—á–Ω–∏—Ç–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞.'}
          </p>
          {canEdit && !searchTerm && (
            <div className="mt-6">
              <button
                onClick={onAddWorker}
                className="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
              >
                <Plus className="w-4 h-4 mr-2" />
                –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞
              </button>
            </div>
          )}
        </div>
      ) : (
        <div className="bg-white shadow overflow-hidden sm:rounded-md">
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –†–∞–±–æ—Ç–Ω–∏–∫
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –î–æ–ª–∂–Ω–æ—Å—Ç—å
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –ö–æ–Ω—Ç–∞–∫—Ç—ã
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –ë–∞–Ω–∫
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –°—Ç–∞–∂
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –°—Ç–∞—Ç—É—Å
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –§–∏–Ω–∞–Ω—Å—ã
                  </th>
                  <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –î–µ–π—Å—Ç–≤–∏—è
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {workers.map((worker) => (
                  <tr key={worker.id} className="hover:bg-gray-50">
                    {/* –†–∞–±–æ—Ç–Ω–∏–∫ */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <div className="flex-shrink-0 h-10 w-10">
                          <div className="h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center">
                            <User className="h-5 w-5 text-blue-600" />
                          </div>
                        </div>
                        <div className="ml-4">
                          <div className="text-sm font-medium text-gray-900">
                            {worker.full_name}
                          </div>
                          <div className="text-sm text-gray-500">
                            ID: {worker.id}
                          </div>
                        </div>
                      </div>
                    </td>

                    {/* –î–æ–ª–∂–Ω–æ—Å—Ç—å */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-900">{worker.position}</div>
                    </td>

                    {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="space-y-1">
                        {worker.phone && (
                          <div className="flex items-center text-sm text-gray-500">
                            <Phone className="w-3 h-3 mr-1" />
                            {worker.phone}
                          </div>
                        )}
                        {worker.telegram_username && (
                          <div className="flex items-center text-sm text-gray-500">
                            <MessageCircle className="w-3 h-3 mr-1" />
                            {worker.telegram_username}
                          </div>
                        )}
                      </div>
                    </td>

                    {/* –ë–∞–Ω–∫ */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="space-y-1">
                        {worker.bank && (
                          <div className="flex items-center text-sm text-gray-500">
                            <Building2 className="w-3 h-3 mr-1" />
                            {worker.bank}
                          </div>
                        )}
                        {worker.masked_card_number && (
                          <div className="flex items-center text-sm text-gray-400">
                            <CreditCard className="w-3 h-3 mr-1" />
                            {worker.masked_card_number}
                          </div>
                        )}
                      </div>
                    </td>

                    {/* –°—Ç–∞–∂ */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="space-y-1">
                        <div className="flex items-center text-sm text-gray-500">
                          <Calendar className="w-3 h-3 mr-1" />
                          {formatDate(worker.hire_date)}
                        </div>
                        <div className="text-xs text-gray-400">
                          {formatWorkExperience(worker.hire_date, worker.fire_date)}
                        </div>
                        {worker.fire_date && (
                          <div className="text-xs text-red-500">
                            –£–≤–æ–ª–µ–Ω: {formatDate(worker.fire_date)}
                          </div>
                        )}
                      </div>
                    </td>

                    {/* –°—Ç–∞—Ç—É—Å */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      {getWorkerStatusBadge(worker)}
                    </td>

                    {/* –§–∏–Ω–∞–Ω—Å—ã */}
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="space-y-1">
                        <div className="text-sm text-gray-900">
                          {worker.transactions_count || 0} –æ–ø–µ—Ä–∞—Ü–∏–π
                        </div>
                        {worker.total_salary_paid > 0 && (
                          <div className="text-xs text-red-600">
                            –í—ã–ø–ª–∞—á–µ–Ω–æ: {formatAmount(worker.total_salary_paid)}
                          </div>
                        )}
                        {worker.total_income_brought > 0 && (
                          <div className="text-xs text-green-600">
                            –ü—Ä–∏–Ω–µ—Å: {formatAmount(worker.total_income_brought)}
                          </div>
                        )}
                      </div>
                    </td>

                    {/* –î–µ–π—Å—Ç–≤–∏—è */}
                    <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                      <div className="flex items-center justify-end space-x-2">
                        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                        <button
                          onClick={() => onViewWorkerStats(worker)}
                          className="text-blue-600 hover:text-blue-900 transition-colors"
                          title="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞"
                        >
                          <BarChart3 className="w-4 h-4" />
                        </button>

                        {/* –§–∏–Ω–∞–Ω—Å—ã */}
                        <button
                          onClick={() => onViewWorkerFinances(worker)}
                          className="text-green-600 hover:text-green-900 transition-colors"
                          title="–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"
                        >
                          <DollarSign className="w-4 h-4" />
                        </button>

                        {/* –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ */}
                        {canEdit && (
                          <button
                            onClick={() => onEditWorker(worker)}
                            className="text-indigo-600 hover:text-indigo-900 transition-colors"
                            title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                          >
                            <Edit2 className="w-4 h-4" />
                          </button>
                        )}

                        {/* –£–¥–∞–ª–µ–Ω–∏–µ */}
                        {canDelete && (
                          <button
                            onClick={() => handleDelete(worker)}
                            className="text-red-600 hover:text-red-900 transition-colors"
                            title="–£–¥–∞–ª–∏—Ç—å"
                          >
                            <Trash2 className="w-4 h-4" />
                          </button>
                        )}
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}
    </div>
  );
};

export default WorkersTable;