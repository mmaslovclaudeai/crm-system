// src/components/tables/FinancesTable.jsx - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –ü–ê–ì–ò–ù–ê–¶–ò–ï–ô
import { DollarSign, TrendingUp, TrendingDown, Edit2, Trash2,
         Loader2, CheckCircle, Clock, ArrowRight, Plus, Download, ChevronLeft, ChevronRight, Filter, BarChart3 } from 'lucide-react';
import { useState } from 'react';
import { FINANCE_TABS, PAYMENT_STATUS } from '../../constants';
import { useAuthContext } from '../../context/AuthContext';
import { getFinanceParticipants } from '../../utils/financeUtils';
import { groupTransferPayments, getTransferParticipants } from '../../utils/transferGroupingUtils';
import { ParticipantCell } from '../ui/ParticipantCell';
import FinanceSubTabs from '../layout/FinanceSubTabs';
import StatementExportModal from '../modals/StatementExportModal';
import FinanceFilterModal from '../modals/FinanceFilterModal';
import FinanceAnalytics from '../charts/FinanceAnalytics';

const formatAmount = (amount) => {
  return Math.abs(Number(amount)).toLocaleString('ru-RU') + ' ‚ÇΩ';
};

const formatDate = (dateString) => {
  return new Date(dateString).toLocaleDateString('ru-RU', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric'
  });
};

const getAmountColor = (amount) => {
  const value = Number(amount);
  if (value > 0) return 'text-green-600';
  if (value < 0) return 'text-red-600';
  return 'text-gray-600';
};

const FinancesTable = ({
  finances = [],
  clients = [],
  cashDesks = [],
  workers = [],
  financeSummary = { total_income: 0, total_expense: 0, balance: 0 },
  loading = false,
  onAddFinance,
  onEditFinance,
  onDeleteFinance,
  onError,
  activeSubTab = FINANCE_TABS.ACTUAL,
  onSubTabChange,
  onApplyFilters,
  isClientCard = false // üÜï –ù–û–í–´–ô –ø—Ä–æ–ø—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞
}) => {
  const { user } = useAuthContext();
  const canDelete = user?.role === 'admin' || user?.role === 'manager';

  // –°–û–°–¢–û–Ø–ù–ò–ï –ü–ê–ì–ò–ù–ê–¶–ò–ò (–ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å ClientsTable)
  const [currentPage, setCurrentPage] = useState(1);
  const [itemsPerPage, setItemsPerPage] = useState(20);

  // üîç –°–û–°–¢–û–Ø–ù–ò–ï –§–ò–õ–¨–¢–†–û–í
  const [isFilterModalOpen, setIsFilterModalOpen] = useState(false);
  const [activeFilters, setActiveFilters] = useState({
    date_from: '',
    date_to: '',
    cash_desk_id: '',
    client_search: '',
    worker_search: '',
    category: '',
    description: ''
  });

  // –ù–û–í–û–ï –°–û–°–¢–û–Ø–ù–ò–ï: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–∏—Å–∫–∏
  const [isStatementModalOpen, setIsStatementModalOpen] = useState(false);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–∏—Å–∫–∏
  const canGenerateStatement = user?.role === 'admin' || user?.role === 'manager';

  // –ù–û–í–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò: –î–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–∏—Å–∫–∏
  const handleOpenStatementModal = () => {
    setIsStatementModalOpen(true);
  };

  const handleCloseStatementModal = () => {
    setIsStatementModalOpen(false);
  };

  const handleStatementError = (errorMessage) => {
    onError?.(errorMessage);
  };

  // üîç –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –§–ò–õ–¨–¢–†–û–í
  const handleOpenFilterModal = () => {
    setIsFilterModalOpen(true);
  };

  const handleCloseFilterModal = () => {
    setIsFilterModalOpen(false);
  };

  const handleApplyFilters = (newFilters) => {
    setActiveFilters(newFilters);
    setCurrentPage(1); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    
    if (onApplyFilters) {
      const fullFilters = {
        ...newFilters,
        status: activeSubTab === FINANCE_TABS.ACTUAL ? 
          PAYMENT_STATUS.ACTUAL : PAYMENT_STATUS.PLANNED
      };
      onApplyFilters(fullFilters);
    }
  };

  // –ü–æ–¥—Å—á–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const getActiveFiltersCount = () => {
    return Object.values(activeFilters).filter(value => 
      value && value.toString().trim() !== ''
    ).length;
  };

  // ‚úÖ –ì–†–£–ü–ü–ò–†–£–ï–ú –ü–ï–†–ï–í–û–î–´ –ú–ï–ñ–î–£ –ö–ê–°–°–ê–ú–ò
  const groupedFinances = groupTransferPayments(finances, cashDesks);

  console.log('üîç –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏:', {
    –∏—Å—Ö–æ–¥–Ω—ã–µ–§–∏–Ω–∞–Ω—Å—ã: finances.length,
    –∫–∞—Å—Å: cashDesks.length,
    —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ–§–∏–Ω–∞–Ω—Å—ã: groupedFinances.length
  });

  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ñ–∏–Ω–∞–Ω—Å—ã –ø–æ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–≤–∫–ª–∞–¥–∫–µ (–≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ)
  const filteredFinances = groupedFinances.filter(finance => {
    if (isClientCard) {
      return true; // –í –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
    }
    if (activeSubTab === FINANCE_TABS.ACTUAL) {
      return finance.status === PAYMENT_STATUS.ACTUAL;
    } else {
      return finance.status === PAYMENT_STATUS.PLANNED;
    }
  }).sort((a, b) => {
    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏ "–§–∞–∫—Ç" - –æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º, –¥–ª—è "–ü–ª–∞–Ω" - –æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º
    if (isClientCard || activeSubTab === FINANCE_TABS.ACTUAL) {
      return new Date(b.date) - new Date(a.date); // –û—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º (DESC)
    } else {
      return new Date(a.date) - new Date(b.date); // –û—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º (ASC)
    }
  });

  // –†–ê–°–ß–ï–¢–´ –î–õ–Ø –ü–ê–ì–ò–ù–ê–¶–ò–ò (–ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å ClientsTable)
  const totalItems = filteredFinances.length;
  const totalPages = Math.ceil(totalItems / itemsPerPage);
  const startIndex = (currentPage - 1) * itemsPerPage;
  const endIndex = startIndex + itemsPerPage;
  // –í –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –±–µ–∑ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  const currentFinances = isClientCard ? filteredFinances : filteredFinances.slice(startIndex, endIndex);

  // –§–£–ù–ö–¶–ò–ò –ü–ê–ì–ò–ù–ê–¶–ò–ò (–ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å ClientsTable)
  const handlePageChange = (page) => {
    setCurrentPage(page);
  };

  const handleItemsPerPageChange = (newItemsPerPage) => {
    setItemsPerPage(newItemsPerPage);
    setCurrentPage(1); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  };

  const getPaginationRange = () => {
    const delta = 2; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü —Å–ª–µ–≤–∞ –∏ —Å–ø—Ä–∞–≤–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π
    const range = [];
    const rangeWithDots = [];

    for (let i = Math.max(2, currentPage - delta); i <= Math.min(totalPages - 1, currentPage + delta); i++) {
      range.push(i);
    }

    if (currentPage - delta > 2) {
      rangeWithDots.push(1, '...');
    } else {
      rangeWithDots.push(1);
    }

    rangeWithDots.push(...range);

    if (currentPage + delta < totalPages - 1) {
      rangeWithDots.push('...', totalPages);
    } else {
      if (totalPages > 1) {
        rangeWithDots.push(totalPages);
      }
    }

    return rangeWithDots;
  };

  // –°–ë–†–û–° –ü–ê–ì–ò–ù–ê–¶–ò–ò –ü–†–ò –ò–ó–ú–ï–ù–ï–ù–ò–ò –î–ê–ù–ù–´–•
  useState(() => {
    if (currentPage > totalPages && totalPages > 0) {
      setCurrentPage(1);
    }
  }, [filteredFinances.length, itemsPerPage]);

  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –±–µ–π–¥–∂–µ–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ –±–µ–∑ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–¥—Å—á–µ—Ç–∞)
  const actualCount = finances.filter(f => f.status === PAYMENT_STATUS.ACTUAL).length;
  const plannedCount = finances.filter(f => f.status === PAYMENT_STATUS.PLANNED).length;

  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–π –ø–æ–¥–≤–∫–ª–∞–¥–∫–∏
  const getFilteredSummary = () => {
    const filtered = filteredFinances;

    // –î–æ—Ö–æ–¥—ã: –æ–±—ã—á–Ω—ã–µ –¥–æ—Ö–æ–¥—ã + –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏)
    const totalIncome = filtered
      .filter(f => f.type === 'income' && !f.is_grouped_transfer)
      .reduce((sum, f) => sum + Number(f.amount), 0);

    // –†–∞—Å—Ö–æ–¥—ã: –æ–±—ã—á–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –±–µ–∑ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ (–ø–µ—Ä–µ–≤–æ–¥—ã - –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏)
    const totalExpense = filtered
      .filter(f => f.type === 'expense' && !f.is_grouped_transfer)
      .reduce((sum, f) => sum + Math.abs(Number(f.amount)), 0);

    return {
      total_income: totalIncome,
      total_expense: totalExpense,
      balance: totalIncome - totalExpense
    };
  };

  const currentSummary = getFilteredSummary();





  // ‚úÖ –û–ë–†–ê–ë–û–¢–ö–ê –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –ü–ï–†–ï–í–û–î–û–í (–∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞)
  const handleEditFinance = (finance) => {
    if (finance.is_grouped_transfer) {
      // –î–ª—è —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
      // –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞:', finance.original_payments);
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–æ–¥–∞–ª –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
      // –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–µ—Ä–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –∏–∑ –ø–∞—Ä—ã
      onEditFinance(finance.original_payments[0]);
    } else {
      onEditFinance(finance);
    }
  };

  // ‚úÖ –û–ë–†–ê–ë–û–¢–ö–ê –£–î–ê–õ–ï–ù–ò–Ø –ü–ï–†–ï–í–û–î–û–í (–∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞)
  const handleDeleteFinance = (financeId) => {
    const finance = filteredFinances.find(f => f.id === financeId);

    if (finance?.is_grouped_transfer) {
      // –î–ª—è —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –æ–±–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
      console.log('–£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞:', finance.original_payments);
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ —É–¥–∞–ª–∏—Ç—å –æ–±–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
      if (confirm('–£–¥–∞–ª–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –º–µ–∂–¥—É –∫–∞—Å—Å–∞–º–∏? –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –æ–±–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.')) {
        finance.original_payments.forEach(payment => {
          onDeleteFinance(payment.id);
        });
      }
    } else {
      onDeleteFinance(financeId);
    }
  };

  // ‚úÖ –†–ï–ù–î–ï–† –°–¢–ê–¢–£–° –ë–ï–ô–î–ñ–ê (–∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞)
  const renderStatusBadge = (finance) => {
    if (finance.is_grouped_transfer) {
      // –î–ª—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –±–µ–π–¥–∂
      return (
        <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
          <ArrowRight className="w-3 h-3 mr-1" />
          –ü–µ—Ä–µ–≤–æ–¥
        </span>
      );
    }

    const isOverdue = finance.status === PAYMENT_STATUS.PLANNED && new Date(finance.date) < new Date();

    return (
      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
        finance.status === PAYMENT_STATUS.ACTUAL
          ? 'bg-green-100 text-green-800'
          : isOverdue
          ? 'bg-red-100 text-red-800' 
          : 'bg-orange-100 text-orange-800'
      }`}>
        <Clock className="w-3 h-3 mr-1" />
        {finance.status === PAYMENT_STATUS.ACTUAL ? '–í—ã–ø–æ–ª–Ω–µ–Ω' : isOverdue ? '–ü—Ä–æ—Å—Ä–æ—á–µ–Ω' : '–ü–ª–∞–Ω'}
      </span>
    );
  };



  return (
    <div className="space-y-6">
      {/* –ü–æ–¥–≤–∫–ª–∞–¥–∫–∏ - —Å–∫—Ä—ã–≤–∞–µ–º –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ */}
      {!isClientCard && (
        <FinanceSubTabs
          activeSubTab={activeSubTab}
          onSubTabChange={onSubTabChange}
          actualCount={actualCount}
          plannedCount={plannedCount}
        />
      )}

      {/* –°–≤–æ–¥–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è –§–∞–∫—Ç –∏ –ü–ª–∞–Ω, –Ω–æ –Ω–µ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ */}
      {activeSubTab !== FINANCE_TABS.STATISTICS && !isClientCard && (
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="bg-white rounded-lg shadow-sm p-6">
            <div className="flex items-center">
              <div className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                <TrendingUp className="w-5 h-5 text-green-600" />
              </div>
              <div className="ml-3">
                <p className="text-sm font-medium text-gray-500">
                  {activeSubTab === FINANCE_TABS.ACTUAL ? '–î–æ—Ö–æ–¥—ã (—Ñ–∞–∫—Ç)' : '–î–æ—Ö–æ–¥—ã (–ø–ª–∞–Ω)'}
                </p>
                <p className="text-2xl font-semibold text-green-600">
                  {formatAmount(currentSummary.total_income)}
                </p>
              </div>
            </div>
          </div>
          <div className="bg-white rounded-lg shadow-sm p-6">
            <div className="flex items-center">
              <div className="w-8 h-8 bg-red-100 rounded-lg flex items-center justify-center">
                <TrendingDown className="w-5 h-5 text-red-600" />
              </div>
              <div className="ml-3">
                <p className="text-sm font-medium text-gray-500">
                  {activeSubTab === FINANCE_TABS.ACTUAL ? '–†–∞—Å—Ö–æ–¥—ã (—Ñ–∞–∫—Ç)' : '–†–∞—Å—Ö–æ–¥—ã (–ø–ª–∞–Ω)'}
                </p>
                <p className="text-2xl font-semibold text-red-600">
                  -{Number(currentSummary.total_expense).toLocaleString('ru-RU')} ‚ÇΩ
                </p>
              </div>
            </div>
          </div>
          <div className="bg-white rounded-lg shadow-sm p-6">
            <div className="flex items-center">
              <div className={`w-8 h-8 rounded-lg flex items-center justify-center ${
                activeSubTab === FINANCE_TABS.ACTUAL ? 'bg-blue-100' : 'bg-orange-100'
              }`}>
                <DollarSign className={`w-5 h-5 ${
                  activeSubTab === FINANCE_TABS.ACTUAL ? 'text-blue-600' : 'text-orange-600'
                }`} />
              </div>
              <div className="ml-3">
                <p className="text-sm font-medium text-gray-500">
                  {activeSubTab === FINANCE_TABS.ACTUAL ? '–ë–∞–ª–∞–Ω—Å (—Ñ–∞–∫—Ç)' : '–ë–∞–ª–∞–Ω—Å (–ø–ª–∞–Ω)'}
                </p>
                <p className={`text-2xl font-semibold ${getAmountColor(currentSummary.balance)}`}>
                  {formatAmount(currentSummary.balance)}
                </p>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* –¢–∞–±–ª–∏—Ü–∞ –æ–ø–µ—Ä–∞—Ü–∏–π */}
      <div className="bg-white rounded-lg shadow-sm">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ */}
        <div className="px-6 py-4 border-b border-gray-200 flex items-center justify-between">
          <div>
            <h2 className="text-lg font-medium text-gray-900">
              {isClientCard ? 
                `–û–ø–µ—Ä–∞—Ü–∏–∏ (${filteredFinances.length})` :
                activeSubTab === FINANCE_TABS.ACTUAL ?
                  `–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (${actualCount})` :
                  activeSubTab === FINANCE_TABS.PLANNED ?
                    `–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (${plannedCount})` :
                    '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤'
              }
            </h2>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π - —Å–∫—Ä—ã–≤–∞–µ–º –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ */}
          {activeSubTab !== FINANCE_TABS.STATISTICS && !isClientCard && (
            <div className="flex items-center space-x-3">
              {/* –ö–Ω–æ–ø–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
              <button
                onClick={handleOpenFilterModal}
                className={`inline-flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors ${
                  getActiveFiltersCount() > 0
                    ? 'bg-blue-100 text-blue-700 hover:bg-blue-200'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
                title="–§–∏–ª—å—Ç—Ä—ã"
              >
                <Filter className="w-4 h-4 mr-2" />
                –§–∏–ª—å—Ç—Ä—ã
                {getActiveFiltersCount() > 0 && (
                  <span className="ml-2 bg-blue-600 text-white text-xs rounded-full px-2 py-1">
                    {getActiveFiltersCount()}
                  </span>
                )}
              </button>

              {/* –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–ø–∏—Å–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∏ —Ç–æ–ª—å–∫–æ –¥–ª—è admin/manager */}
              {activeSubTab === FINANCE_TABS.ACTUAL && canGenerateStatement && (
                <button
                  onClick={handleOpenStatementModal}
                  className="inline-flex items-center px-3 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors"
                  title="–°–∫–∞—á–∞—Ç—å –≤—ã–ø–∏—Å–∫—É"
                >
                  <Download className="w-4 h-4 mr-2" />
                  –í—ã–ø–∏—Å–∫–∞
                </button>
              )}

              {/* –°—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ */}
              <button
                onClick={onAddFinance}
                className="inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors"
              >
                <Plus className="w-4 h-4 mr-2" />
                –î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é
              </button>
            </div>
          )}
        </div>

        {activeSubTab === FINANCE_TABS.STATISTICS ? (
          <FinanceAnalytics />
        ) : loading ? (
          <div className="p-12 text-center text-gray-500">
            <Loader2 className="w-12 h-12 mx-auto mb-4 text-gray-300 animate-spin" />
            <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
          </div>
        ) : filteredFinances.length === 0 ? (
          <div className="px-6 py-12 text-center text-gray-500">
            {isClientCard ? (
              <DollarSign className="w-12 h-12 mx-auto mb-4 text-gray-300" />
            ) : activeSubTab === FINANCE_TABS.ACTUAL ? (
              <CheckCircle className="w-12 h-12 mx-auto mb-4 text-gray-300" />
            ) : (
              <Clock className="w-12 h-12 mx-auto mb-4 text-gray-300" />
            )}
            <p>
              {isClientCard 
                ? '–û–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ –∫–ª–∏–µ–Ω—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
                : activeSubTab === FINANCE_TABS.ACTUAL
                  ? '–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
                  : '–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
              }
            </p>
            <p className="text-sm mt-2">
              {isClientCard 
                ? '–û–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –∏—Ö –¥–æ–±–∞–≤–ª–µ–Ω–∏—è'
                : '–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ'
              }
            </p>
          </div>
        ) : (
          <>
            {/* –°–ï–õ–ï–ö–¢–û–† –ö–û–õ–ò–ß–ï–°–¢–í–ê –ó–ê–ü–ò–°–ï–ô –ù–ê –°–¢–†–ê–ù–ò–¶–ï - —Å–∫—Ä—ã–≤–∞–µ–º –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ */}
            {!isClientCard && (
              <div className="px-6 py-3 bg-gray-50 border-b border-gray-200 flex items-center justify-between">
                <div className="flex items-center space-x-4">
                  <span className="text-sm text-gray-600">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ:</span>
                  <div className="flex space-x-1">
                    {[10, 20, 40].map((count) => (
                      <button
                        key={count}
                        onClick={() => handleItemsPerPageChange(count)}
                        className={`px-3 py-1 text-sm rounded transition-colors ${
                          itemsPerPage === count
                            ? 'bg-blue-100 text-blue-700 font-medium'
                            : 'text-gray-600 hover:bg-gray-100'
                        }`}
                      >
                        {count}
                      </button>
                    ))}
                  </div>
                </div>
                <div className="text-sm text-gray-600">
                  –ü–æ–∫–∞–∑–∞–Ω–æ {startIndex + 1}-{Math.min(endIndex, totalItems)} –∏–∑ {totalItems}
                </div>
              </div>
            )}

            {/* –¢–ê–ë–õ–ò–¶–ê */}
            <div className="overflow-x-auto">
              <table className="w-full">
                <thead className="bg-gray-50">
                  <tr>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –î–∞—Ç–∞
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –°—É–º–º–∞
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –ü–æ–ª—É—á–∞—Ç–µ–ª—å
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –û–ø–∏—Å–∞–Ω–∏–µ
                    </th>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –°—Ç–∞—Ç—É—Å
                    </th>
                    <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                      –î–µ–π—Å—Ç–≤–∏—è
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-white divide-y divide-gray-200">
                  {currentFinances.map((finance) => {
                    // ‚úÖ –û–ü–†–ï–î–ï–õ–Ø–ï–ú –£–ß–ê–°–¢–ù–ò–ö–û–í –î–õ–Ø –ü–ï–†–ï–í–û–î–û–í –ò –û–ë–´–ß–ù–´–• –û–ü–ï–†–ê–¶–ò–ô
                    const { sender, recipient } = finance.is_grouped_transfer
                      ? getTransferParticipants(finance, cashDesks)
                      : getFinanceParticipants(finance, clients, cashDesks, workers);

                    return (
                      <tr key={finance.id || `${finance.date}-${finance.amount}-${Math.random()}`} className="hover:bg-gray-50">
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {formatDate(finance.date)}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <span className={`text-sm font-medium ${
                            finance.is_grouped_transfer 
                              ? 'text-blue-600' 
                              : finance.type === 'income' 
                                ? 'text-green-600' 
                                : 'text-red-600'
                          }`}>
                            {finance.is_grouped_transfer
                              ? '‚Üí'
                              : finance.type === 'income'
                                ? '+'
                                : '-'}{formatAmount(finance.amount)}
                          </span>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <ParticipantCell participant={sender} />
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <ParticipantCell participant={recipient} />
                        </td>
                        <td className="px-6 py-4 text-sm text-gray-900 max-w-xs">
                          <div>
                            {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º —Å–≤–µ—Ä—Ö—É */}
                            {finance.category && (
                              <div className="font-semibold text-gray-900 truncate" title={finance.category}>
                                {finance.category}
                              </div>
                            )}
                            {/* –û–ø–∏—Å–∞–Ω–∏–µ –æ–±—ã—á–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º —Å–Ω–∏–∑—É */}
                            {finance.description && (
                              <div className="truncate text-gray-600" title={finance.description}>
                                {finance.description}
                              </div>
                            )}
                            {/* –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –Ω–∏ –æ–ø–∏—Å–∞–Ω–∏—è */}
                            {!finance.category && !finance.description && (
                              <span className="text-gray-400 italic">‚Äî</span>
                            )}
                          </div>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          {renderStatusBadge(finance)}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                          <div className="flex items-center justify-end space-x-2">
                            {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π */}
                            {!finance.is_grouped_transfer && (
                              <button
                                onClick={() => handleEditFinance(finance)}
                                className="text-blue-600 hover:text-blue-900 transition-colors"
                                title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                              >
                                <Edit2 className="w-4 h-4" />
                              </button>
                            )}
                            {canDelete && (
                              <button
                                onClick={() => handleDeleteFinance(finance.id || finance.transfer_id)}
                                className="text-red-600 hover:text-red-900 transition-colors"
                                title={finance.is_grouped_transfer ? "–£–¥–∞–ª–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥" : "–£–¥–∞–ª–∏—Ç—å"}
                              >
                                <Trash2 className="w-4 h-4" />
                              </button>
                            )}
                          </div>
                        </td>
                      </tr>
                    );
                  })}
                </tbody>
              </table>
            </div>

            {/* –ü–ê–ì–ò–ù–ê–¶–ò–Ø - —Å–∫—Ä—ã–≤–∞–µ–º –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ */}
            {totalPages > 1 && !isClientCard && (
              <div className="px-6 py-4 bg-gray-50 border-t border-gray-200 flex items-center justify-between">
                <div className="flex items-center space-x-2">
                  <button
                    onClick={() => handlePageChange(currentPage - 1)}
                    disabled={currentPage === 1}
                    className="inline-flex items-center px-2 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    <ChevronLeft className="w-4 h-4" />
                  </button>

                  <div className="flex items-center space-x-1">
                    {getPaginationRange().map((page, index) => (
                      <button
                        key={index}
                        onClick={() => typeof page === 'number' ? handlePageChange(page) : null}
                        disabled={page === '...'}
                        className={`px-3 py-2 text-sm font-medium rounded-md transition-colors ${
                          page === currentPage
                            ? 'bg-blue-600 text-white'
                            : page === '...'
                            ? 'text-gray-400 cursor-default'
                            : 'text-gray-700 bg-white border border-gray-300 hover:bg-gray-50'
                        }`}
                      >
                        {page}
                      </button>
                    ))}
                  </div>

                  <button
                    onClick={() => handlePageChange(currentPage + 1)}
                    disabled={currentPage === totalPages}
                    className="inline-flex items-center px-2 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    <ChevronRight className="w-4 h-4" />
                  </button>
                </div>

                <div className="text-sm text-gray-700">
                  –°—Ç—Ä–∞–Ω–∏—Ü–∞ {currentPage} –∏–∑ {totalPages}
                </div>
              </div>
            )}
          </>
        )}
      </div>

      {/* –ù–û–í–û–ï –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–ø–∏—Å–∫–∏ - —Å–∫—Ä—ã–≤–∞–µ–º –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ */}
      {!isClientCard && (
        <StatementExportModal
          isOpen={isStatementModalOpen}
          onClose={handleCloseStatementModal}
          onError={handleStatementError}
        />
      )}

      {/* –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –§–ò–õ–¨–¢–†–û–í - —Å–∫—Ä—ã–≤–∞–µ–º –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ */}
      {!isClientCard && (
        <FinanceFilterModal
          isOpen={isFilterModalOpen}
          onClose={handleCloseFilterModal}
          onApplyFilters={handleApplyFilters}
          finances={finances}
          cashDesks={cashDesks}
          clients={clients}
          workers={workers}
          initialFilters={activeFilters}
        />
      )}
    </div>
  );
};

export default FinancesTable;