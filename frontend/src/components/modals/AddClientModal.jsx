// src/components/modals/AddClientModal.jsx - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –ö–û–ù–¢–ï–ö–°–¢–ê–ú–ò
import { useState, useEffect } from 'react';
import { X, Target, Users } from 'lucide-react';
import ClientForm from '../forms/ClientForm';
import { STATUS_GROUPS } from '../../constants';
import { getDefaultStatusForContext } from '../../utils/statusUtils';

const AddClientModal = ({
  isOpen,
  onClose,
  onSuccess,
  onError,
  context = STATUS_GROUPS.ALL // üîß –ù–û–í–´–ô –ü–†–û–ü: –∫–æ–Ω—Ç–µ–∫—Å—Ç (leads, clients, all)
}) => {
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    if (!isOpen) {
      setLoading(false);
    }
  }, [isOpen]);

  // üîß –ù–û–í–û–ï: –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const getModalConfig = () => {
    switch (context) {
      case STATUS_GROUPS.LEADS:
        return {
          title: '–î–æ–±–∞–≤–∏—Ç—å –ª–∏–¥–∞',
          icon: Target,
          iconColor: 'text-blue-600',
          submitText: '–î–æ–±–∞–≤–∏—Ç—å –ª–∏–¥–∞'
        };
      case STATUS_GROUPS.CLIENTS:
        return {
          title: '–î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞',
          icon: Users,
          iconColor: 'text-green-600',
          submitText: '–î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞'
        };
      default:
        return {
          title: '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å',
          icon: Users,
          iconColor: 'text-gray-600',
          submitText: '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å'
        };
    }
  };

  const config = getModalConfig();
  const IconComponent = config.icon;

  // üîß –ù–û–í–û–ï: –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
  const getInitialData = () => {
    const defaultStatus = getDefaultStatusForContext(context);
    return {
      fullName: '',
      email: '',
      phone: '',
      status: defaultStatus
    };
  };

  const handleSubmit = async (formData) => {
    console.log('üü¢ AddClientModal.handleSubmit - –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–≤–µ—Ä—Ö:', { formData, context });

    setLoading(true);
    try {
      // –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
      onSuccess(formData);
      onClose();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ AddClientModal:', error);
      onError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã');
    } finally {
      setLoading(false);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg shadow-xl w-full max-w-md mx-4">
        {/* Header */}
        <div className="flex items-center justify-between p-6 border-b">
          <div className="flex items-center space-x-3">
            <IconComponent className={`w-6 h-6 ${config.iconColor}`} />
            <h3 className="text-lg font-semibold text-gray-900">{config.title}</h3>
          </div>
          <button
            onClick={onClose}
            disabled={loading}
            className="text-gray-400 hover:text-gray-600 transition-colors disabled:cursor-not-allowed"
          >
            <X className="w-6 h-6" />
          </button>
        </div>

        {/* Body */}
        <div className="p-6">
          <ClientForm
            initialData={getInitialData()}
            onSubmit={handleSubmit}
            onCancel={onClose}
            loading={loading}
            submitText={config.submitText}
            context={context} // üîß –ü–ï–†–ï–î–ê–ï–ú –ö–û–ù–¢–ï–ö–°–¢ –í –§–û–†–ú–£
          />
        </div>
      </div>
    </div>
  );
};

export default AddClientModal;