// src/components/client-card/sections/ClientBasicInfo.jsx - –û–ë–ù–û–í–õ–ï–ù –° –§–ò–ö–°–ò–†–û–í–ê–ù–ù–´–ú–ò –í–´–ü–ê–î–ê–Æ–©–ò–ú–ò –ú–ï–ù–Æ
import { User, Mail, Phone, MessageCircle, UserCheck, GraduationCap, Calendar, Users, MapPin } from 'lucide-react';
import { useState, useEffect } from 'react';
import EditableSection from '../components/EditableSection';
import CopyButton from '../components/CopyButton';
import StatusBadge from '../components/StatusBadge';
import InputField from '../../ui/InputField';
import DropdownField from '../../ui/DropdownField';
import SimpleDatePicker from '../../ui/SimpleDatePicker';

const ClientBasicInfo = ({
  client,
  isEditing,
  isSaving,
  formData,
  onEdit,
  onSave,
  onCancel,
  onChange
}) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤
  const [curators, setCurators] = useState([]);
  const [loadingCurators, setLoadingCurators] = useState(false);

  // üÜï –§–ò–ö–°–ò–†–û–í–ê–ù–ù–´–ï –û–ü–¶–ò–ò –î–õ–Ø –ü–û–¢–û–ö–û–í –ò –ì–†–£–ü–ü
  const flowOptions = [
    { value: '–ö–ü3.0', label: '–ö–ü3.0' },
    { value: '–ö–ü4.0', label: '–ö–ü4.0' },
    { value: '–ú–µ–∂—Å–µ–∑–æ–Ω—å–µ', label: '–ú–µ–∂—Å–µ–∑–æ–Ω—å–µ' }
  ];

  const groupOptions = [
    { value: '–†–ì-1', label: '–†–ì-1' },
    { value: '–†–ì-2', label: '–†–ì-2' },
    { value: '–†–ì-3', label: '–†–ì-3' },
    { value: '–†–ì-4', label: '–†–ì-4' },
    { value: '–†–ì-5', label: '–†–ì-5' },
    { value: '–ê–ì-1', label: '–ê–ì-1' },
    { value: '–ê–ì-2', label: '–ê–ì-2' },
    { value: '–ê–ì-3', label: '–ê–ì-3' }
  ];

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (isEditing) {
      loadCurators();
    }
  }, [isEditing]);

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä–∞—Ç–æ—Ä–æ–≤
  const loadCurators = async () => {
    try {
      setLoadingCurators(true);

      // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º API —Å–µ—Ä–≤–∏—Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
      const { apiService } = await import('../../../services/api');

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
      const response = await apiService.get('/workers?active_only=true');
      const workers = Array.isArray(response) ? response : [];

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è dropdown
      const curatorOptions = workers.map(worker => ({
        value: worker.id,
        label: `${worker.full_name} (${worker.position})`
      }));

      setCurators(curatorOptions);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä–∞—Ç–æ—Ä–æ–≤:', error);
      setCurators([]);
    } finally {
      setLoadingCurators(false);
    }
  };



  // –û–ø—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
  const statusOptions = [
    // –ü—Ä–∏–µ–º–∫–∞
    { value: 'CREATED', label: '–°–æ–∑–¥–∞–Ω' },
    { value: 'DISTRIBUTION', label: '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ' },
    { value: 'GIVE_ACCESS', label: '–í—ã–¥–∞—á–∞ –¥–æ—Å—Ç—É–ø–æ–≤' },
    // –£—á–µ–Ω–∏–∫–∏
    { value: 'IN_PROGRESS', label: '–û–±—É—á–∞–µ—Ç—Å—è' },
    { value: 'SEARCH_OFFER', label: '–ò—â–µ—Ç —Ä–∞–±–æ—Ç—É' },
    { value: 'ACCEPT_OFFER', label: '–ü—Ä–∏–Ω—è–ª –æ—Ñ—Ñ–µ—Ä' },
    { value: 'PAYING_OFFER', label: '–í—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç' },
    { value: 'FINISH', label: '–ó–∞–∫–æ–Ω—á–∏–ª –æ–±—É—á–µ–Ω–∏–µ' }
  ];

  // –û–ø—Ü–∏–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
  const directionOptions = [
    { value: 'QA', label: 'QA (–†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)' },
    { value: 'AQA', label: 'AQA (–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)' }
  ];

  const handleInputChange = (field, value) => {
    if (onChange) {
      onChange(field, value);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è
  const handleEducationChange = (field, value) => {
    const currentData = formData.data || {};
    const updatedData = { ...currentData, [field]: value };
    handleInputChange('data', updatedData);
  };

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è –∏–∑ formData –∏–ª–∏ client
  const educationData = isEditing ? (formData.data || {}) : (client?.data || {});

  return (
    <EditableSection
      title="–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
      icon={User}
      isEditing={isEditing}
      isSaving={isSaving}
      onEdit={onEdit}
      onSave={onSave}
      onCancel={onCancel}
    >
      {isEditing ? (
        /* –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */
        <div className="space-y-6">
          {/* –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
          <div className="bg-gray-50 rounded-lg p-4 space-y-4">
            <h4 className="text-sm font-medium text-gray-900 flex items-center space-x-2">
              <User className="w-4 h-4" />
              <span>–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</span>
            </h4>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <InputField
                label="–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞"
                value={formData.name}
                onChange={(value) => handleInputChange('name', value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞"
                required
              />

              <InputField
                label="Email"
                type="email"
                value={formData.email}
                onChange={(value) => handleInputChange('email', value)}
                placeholder="client@example.com"
                required
              />

              <InputField
                label="–¢–µ–ª–µ—Ñ–æ–Ω"
                value={formData.phone}
                onChange={(value) => handleInputChange('phone', value)}
                placeholder="+7 (999) 123-45-67"
              />

              <InputField
                label="Telegram"
                value={formData.telegram}
                onChange={(value) => handleInputChange('telegram', value)}
                placeholder="@username"
              />
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <DropdownField
                label="–°—Ç–∞—Ç—É—Å"
                value={formData.status}
                onChange={(value) => handleInputChange('status', value)}
                options={statusOptions}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å"
              />

              <DropdownField
                label="–ö—É—Ä–∞—Ç–æ—Ä"
                value={formData.worker_id}
                onChange={(value) => handleInputChange('worker_id', value)}
                options={[
                  { value: null, label: '–ë–µ–∑ –∫—É—Ä–∞—Ç–æ—Ä–∞' },
                  ...curators
                ]}
                placeholder={loadingCurators ? "–ó–∞–≥—Ä—É–∑–∫–∞..." : "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä–∞—Ç–æ—Ä–∞"}
                disabled={loadingCurators}
              />
            </div>
          </div>

          {/* –î–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è */}
          <div className="bg-blue-50 rounded-lg p-4 space-y-4">
            <h4 className="text-sm font-medium text-gray-900 flex items-center space-x-2">
              <GraduationCap className="w-4 h-4" />
              <span>–î–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è</span>
            </h4>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <DropdownField
                label="–ü–æ—Ç–æ–∫"
                value={educationData.flow || ''}
                onChange={(value) => handleEducationChange('flow', value)}
                options={[
                  { value: '', label: '–ù–µ –≤—ã–±—Ä–∞–Ω–æ' },
                  ...flowOptions
                ]}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Ç–æ–∫"
              />

              <DropdownField
                label="–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
                value={educationData.direction || ''}
                onChange={(value) => handleEducationChange('direction', value)}
                options={[
                  { value: '', label: '–ù–µ –≤—ã–±—Ä–∞–Ω–æ' },
                  ...directionOptions
                ]}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
              />

              <DropdownField
                label="–ì—Ä—É–ø–ø–∞"
                value={educationData.group || ''}
                onChange={(value) => handleEducationChange('group', value)}
                options={[
                  { value: '', label: '–ù–µ –≤—ã–±—Ä–∞–Ω–æ' },
                  ...groupOptions
                ]}
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É"
              />
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <SimpleDatePicker
                label="–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –æ–±—É—á–µ–Ω–∏—è"
                value={educationData.start_date || ''}
                onChange={(value) => handleEducationChange('start_date', value)}
                placeholder="YYYY-MM-DD"
              />

              <SimpleDatePicker
                label="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è"
                value={educationData.end_date || ''}
                onChange={(value) => handleEducationChange('end_date', value)}
                placeholder="YYYY-MM-DD"
              />
            </div>
          </div>
        </div>
      ) : (
        /* –†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */
        <div className="space-y-6">
          {/* –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
          <div className="space-y-4">
            <h4 className="text-sm font-medium text-gray-700 flex items-center space-x-2 pb-2 border-b">
              <User className="w-4 h-4" />
              <span>–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</span>
            </h4>

            {/* –ò–º—è */}
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <User className="w-5 h-5 text-gray-400" />
                <div>
                  <p className="text-sm font-medium text-gray-900">
                    {client?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                  </p>
                  <p className="text-xs text-gray-500">–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞</p>
                </div>
              </div>
              {client?.name && (
                <CopyButton
                  text={client.name}
                  fieldName="name"
                />
              )}
            </div>

            {/* Email */}
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <Mail className="w-5 h-5 text-gray-400" />
                <div>
                  <p className="text-sm font-medium text-gray-900">
                    {client?.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                  </p>
                  <p className="text-xs text-gray-500">Email</p>
                </div>
              </div>
              {client?.email && (
                <CopyButton
                  text={client.email}
                  fieldName="email"
                />
              )}
            </div>

            {/* –¢–µ–ª–µ—Ñ–æ–Ω */}
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <Phone className="w-5 h-5 text-gray-400" />
                <div>
                  <p className="text-sm font-medium text-gray-900">
                    {client?.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                  </p>
                  <p className="text-xs text-gray-500">–¢–µ–ª–µ—Ñ–æ–Ω</p>
                </div>
              </div>
              {client?.phone && (
                <CopyButton
                  text={client.phone}
                  fieldName="phone"
                />
              )}
            </div>

            {/* Telegram */}
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <MessageCircle className="w-5 h-5 text-gray-400" />
                <div>
                  <p className="text-sm font-medium text-gray-900">
                    {client?.telegram || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                  </p>
                  <p className="text-xs text-gray-500">Telegram</p>
                </div>
              </div>
              {client?.telegram && (
                <CopyButton
                  text={client.telegram}
                  fieldName="telegram"
                />
              )}
            </div>

            {/* –°—Ç–∞—Ç—É—Å */}
            <div className="flex items-center space-x-3">
              <div className="w-5 h-5 flex items-center justify-center">
                <div className="w-2 h-2 bg-blue-400 rounded-full"></div>
              </div>
              <div className="flex items-center space-x-3">
                <div>
                  <p className="text-xs text-gray-500">–°—Ç–∞—Ç—É—Å</p>
                </div>
                <StatusBadge status={client?.status} />
              </div>
            </div>

            {/* –ö—É—Ä–∞—Ç–æ—Ä */}
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <UserCheck className="w-5 h-5 text-gray-400" />
                <div>
                  <p className="text-sm font-medium text-gray-900">
                    {client?.curator ? (
                      <span>
                        {client.curator.name}
                        <span className="text-xs text-gray-500 ml-1">
                          ({client.curator.position})
                        </span>
                      </span>
                    ) : (
                      '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'
                    )}
                  </p>
                  <p className="text-xs text-gray-500">–ö—É—Ä–∞—Ç–æ—Ä</p>
                </div>
              </div>
              {client?.curator && (
                <CopyButton
                  text={client.curator.name}
                  fieldName="curator"
                />
              )}
            </div>
          </div>

          {/* –î–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è */}
          {(educationData.flow || educationData.direction || educationData.group ||
            educationData.start_date || educationData.end_date) && (
            <div className="space-y-4">
              <h4 className="text-sm font-medium text-gray-700 flex items-center space-x-2 pb-2 border-b">
                <GraduationCap className="w-4 h-4" />
                <span>–î–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è</span>
              </h4>

              {/* –ü–æ—Ç–æ–∫ */}
              {educationData.flow && (
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <MapPin className="w-5 h-5 text-gray-400" />
                    <div>
                      <p className="text-sm font-medium text-gray-900">
                        {educationData.flow}
                      </p>
                      <p className="text-xs text-gray-500">–ü–æ—Ç–æ–∫</p>
                    </div>
                  </div>
                  <CopyButton
                    text={educationData.flow}
                    fieldName="flow"
                  />
                </div>
              )}

              {/* –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
              {educationData.direction && (
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <GraduationCap className="w-5 h-5 text-gray-400" />
                    <div>
                      <p className="text-sm font-medium text-gray-900">
                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                          educationData.direction === 'QA' 
                            ? 'bg-green-100 text-green-800' 
                            : 'bg-blue-100 text-blue-800'
                        }`}>
                          {educationData.direction}
                        </span>
                      </p>
                      <p className="text-xs text-gray-500">–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</p>
                    </div>
                  </div>
                  <CopyButton
                    text={educationData.direction}
                    fieldName="direction"
                  />
                </div>
              )}

              {/* –ì—Ä—É–ø–ø–∞ */}
              {educationData.group && (
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <Users className="w-5 h-5 text-gray-400" />
                    <div>
                      <p className="text-sm font-medium text-gray-900">
                        {educationData.group}
                      </p>
                      <p className="text-xs text-gray-500">–ì—Ä—É–ø–ø–∞</p>
                    </div>
                  </div>
                  <CopyButton
                    text={educationData.group}
                    fieldName="group"
                  />
                </div>
              )}

              {/* –î–∞—Ç—ã –æ–±—É—á–µ–Ω–∏—è */}
              {(educationData.start_date || educationData.end_date) && (
                <div className="flex items-center space-x-3">
                  <Calendar className="w-5 h-5 text-gray-400" />
                  <div className="flex-1">
                    <div className="flex items-center space-x-4">
                      {educationData.start_date && (
                        <div>
                          <p className="text-sm font-medium text-gray-900">
                            {new Date(educationData.start_date).toLocaleDateString('ru-RU')}
                          </p>
                          <p className="text-xs text-gray-500">–ù–∞—á–∞–ª–æ</p>
                        </div>
                      )}
                      {educationData.start_date && educationData.end_date && (
                        <span className="text-gray-400">‚Üí</span>
                      )}
                      {educationData.end_date && (
                        <div>
                          <p className="text-sm font-medium text-gray-900">
                            {new Date(educationData.end_date).toLocaleDateString('ru-RU')}
                          </p>
                          <p className="text-xs text-gray-500">–û–∫–æ–Ω—á–∞–Ω–∏–µ</p>
                        </div>
                      )}
                    </div>
                    <p className="text-xs text-gray-500 mt-1">–ü–µ—Ä–∏–æ–¥ –æ–±—É—á–µ–Ω–∏—è</p>
                  </div>
                  {(educationData.start_date || educationData.end_date) && (
                    <CopyButton
                      text={`${educationData.start_date || ''} - ${educationData.end_date || ''}`}
                      fieldName="dates"
                    />
                  )}
                </div>
              )}
            </div>
          )}
        </div>
      )}
    </EditableSection>
  );
};

export default ClientBasicInfo;