// src/components/client-card/hooks/useClientEdit.js - –û–ë–ù–û–í–õ–ï–ù –° –ü–û–î–î–ï–†–ñ–ö–û–ô –ù–û–í–´–• –ü–û–õ–ï–ô
import { useState, useEffect } from 'react';
import { clientsService } from '../../../services/clientsService.js';

export const useClientEdit = (client, onSuccess, onError) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const [editingBasic, setEditingBasic] = useState(false);
  const [savingBasic, setSavingBasic] = useState(false);

  // üÜï –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π
  const [basicFormData, setBasicFormData] = useState({
    name: '',
    email: '',
    phone: '',
    status: '',
    worker_id: null,    // üÜï ID –∫—É—Ä–∞—Ç–æ—Ä–∞
    data: {}            // üÜï JSON –¥–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è
  });

  // üÜï –û–ë–ù–û–í–õ–ï–ù–ù–û–ï –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ client
  useEffect(() => {
    if (client) {
      // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ–æ—Ä–º—É —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏
      setBasicFormData({
        name: client.name || '',
        email: client.email || '',
        phone: client.phone || '',
        status: client.status || '',
        worker_id: client.worker_id || null,
        data: client.data || {}
      });
    }
  }, [client]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  const handleEditBasic = () => {
    setEditingBasic(true);
  };

  const handleCancelBasic = () => {
    if (client) {
      // üÜï –û–ë–ù–û–í–õ–ï–ù–û: —Å–±—Ä–æ—Å —Ñ–æ—Ä–º—ã —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏
      setBasicFormData({
        name: client.name || '',
        email: client.email || '',
        phone: client.phone || '',
        status: client.status || '',
        worker_id: client.worker_id || null,
        data: client.data || {}
      });
    }
    setEditingBasic(false);
  };

  const handleSaveBasic = async () => {
    if (!client) return;

    setSavingBasic(true);
    try {
      // üÜï –û–ë–ù–û–í–õ–ï–ù–û: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è –≤–∫–ª—é—á–∞—è –Ω–æ–≤—ã–µ
      const updateData = {
        name: basicFormData.name,
        email: basicFormData.email,
        phone: basicFormData.phone,
        status: basicFormData.status,
        worker_id: basicFormData.worker_id,
        data: basicFormData.data
      };

      const updatedClient = await clientsService.updateClient(client.id, updateData);
      setEditingBasic(false);
      if (onSuccess) {
        onSuccess('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞', updatedClient);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', error);
      if (onError) {
        onError(error.message || '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');
      }
    } finally {
      setSavingBasic(false);
    }
  };

  // üÜï –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º
  const handleBasicChange = (field, value) => {
    setBasicFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  // üÜï –ù–û–í–´–ô –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –æ–±—É—á–µ–Ω–∏—è
  const handleEducationChange = (field, value) => {
    setBasicFormData(prev => ({
      ...prev,
      data: {
        ...prev.data,
        [field]: value
      }
    }));
  };

  // üÜï –ù–û–í–´–ô –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫—É—Ä–∞—Ç–æ—Ä–∞
  const handleCuratorChange = (curatorId) => {
    setBasicFormData(prev => ({
      ...prev,
      worker_id: curatorId
    }));
  };

  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    editingBasic,
    savingBasic,

    // –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º
    basicFormData,

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    handleEditBasic,
    handleCancelBasic,
    handleSaveBasic,

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    handleBasicChange,
    handleEducationChange,  // üÜï –ù–û–í–´–ô
    handleCuratorChange     // üÜï –ù–û–í–´–ô
  };
};