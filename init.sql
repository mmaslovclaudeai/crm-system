-- üöÄ –ü–û–õ–ù–û–°–¢–¨–Æ –ê–ö–¢–£–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ô init.sql

-- –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º—ã
CREATE SCHEMA IF NOT EXISTS crm;

-- üéØ ENUM —Ç–∏–ø—ã
CREATE TYPE crm.client_status_enum AS ENUM (
    -- –°—Ç–∞—Ç—É—Å—ã –ø—Ä–∏–µ–º–∫–∏
    'CREATED',       -- –°–æ–∑–¥–∞–Ω
    'DISTRIBUTION',  -- –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
    'GIVE_ACCESS',   -- –í—ã–¥–∞—á–∞ –¥–æ—Å—Ç—É–ø–æ–≤
    -- –°—Ç–∞—Ç—É—Å—ã —É—á–µ–Ω–∏–∫–æ–≤
    'IN_PROGRESS',   -- –û–±—É—á–∞–µ—Ç—Å—è
    'SEARCH_OFFER',  -- –ò—â–µ—Ç —Ä–∞–±–æ—Ç—É
    'ACCEPT_OFFER',  -- –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ñ—Ñ–µ—Ä
    'PAYING_OFFER',  -- –í—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç
    'FINISH'         -- –ó–∞–∫–æ–Ω—á–∏–ª –æ–±—É—á–µ–Ω–∏–µ
);

-- üë§ –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–∏—Å—Ç–µ–º—ã
CREATE TABLE IF NOT EXISTS crm.users (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    role VARCHAR(50) DEFAULT 'viewer' CHECK (role IN ('admin', 'manager', 'viewer')),
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- üë• –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤/—Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
CREATE TABLE IF NOT EXISTS crm.workers (
    id SERIAL PRIMARY KEY,
    full_name VARCHAR(255) NOT NULL,
    position VARCHAR(255) NOT NULL,
    telegram_username VARCHAR(100),
    phone VARCHAR(20),
    email VARCHAR(255),
    bank VARCHAR(100),
    card_number VARCHAR(19),
    salary DECIMAL(12,2),
    hire_date DATE NOT NULL,
    fire_date DATE,
    is_active BOOLEAN DEFAULT true,
    documents JSONB DEFAULT '{}',
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- üéØ –¢–∞–±–ª–∏—Ü–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ (–ª–∏–¥—ã + –∫–ª–∏–µ–Ω—Ç—ã) - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø
CREATE TABLE IF NOT EXISTS crm.clients (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(50),
    status crm.client_status_enum DEFAULT 'CREATED',
    telegram VARCHAR(100),
    worker_id INTEGER REFERENCES crm.workers(id), -- üÜï –°–í–Ø–ó–¨ –° –ö–£–†–ê–¢–û–†–û–ú
    documents JSONB DEFAULT '{}',
    data JSONB DEFAULT '{}', -- üÜï –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- üí∞ –¢–∞–±–ª–∏—Ü–∞ –∫–∞—Å—Å
CREATE TABLE IF NOT EXISTS crm.cash_desks (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    current_balance DECIMAL(15,2) DEFAULT 0.00,
    description TEXT,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- üí∏ –¢–∞–±–ª–∏—Ü–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏)
CREATE TABLE IF NOT EXISTS crm.finances (
    id SERIAL PRIMARY KEY,
    date DATE NOT NULL,
    amount DECIMAL(15,2) NOT NULL,
    type VARCHAR(20) CHECK (type IN ('income', 'expense', 'transfer')) NOT NULL,
    status VARCHAR(20) DEFAULT 'actual' CHECK (status IN ('actual', 'planned')) NOT NULL,
    description TEXT,
    category VARCHAR(100),
    client_id INTEGER REFERENCES crm.clients(id),
    cash_desk_id INTEGER REFERENCES crm.cash_desks(id),
    worker_id INTEGER REFERENCES crm.workers(id),
    transfer_pair_id INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- üìù –¢–∞–±–ª–∏—Ü–∞ –∑–∞–º–µ—Ç–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤
CREATE TABLE IF NOT EXISTS crm.client_notes (
    id SERIAL PRIMARY KEY,
    client_id INTEGER NOT NULL REFERENCES crm.clients(id),
    author_id INTEGER NOT NULL REFERENCES crm.users(id),
    content TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- üìö –¢–ê–ë–õ–ò–¶–ê –ò–°–¢–û–†–ò–ò –°–¢–ê–¢–£–°–û–í –ö–õ–ò–ï–ù–¢–û–í
CREATE TABLE IF NOT EXISTS crm.clients_status_history (
    id SERIAL PRIMARY KEY,
    client_id INTEGER NOT NULL REFERENCES crm.clients(id) ON DELETE CASCADE,
    old_status VARCHAR(50),
    new_status VARCHAR(50) NOT NULL,
    changed_by INTEGER REFERENCES crm.users(id),
    changed_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    reason TEXT, -- –ü—Ä–∏—á–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    notes TEXT   -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏
);

-- üîç –ò–ù–î–ï–ö–°–´ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è users
CREATE INDEX IF NOT EXISTS idx_users_email ON crm.users(email);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è workers
CREATE INDEX IF NOT EXISTS idx_workers_full_name ON crm.workers(full_name);
CREATE INDEX IF NOT EXISTS idx_workers_position ON crm.workers(position);
CREATE INDEX IF NOT EXISTS idx_workers_is_active ON crm.workers(is_active);
CREATE INDEX IF NOT EXISTS idx_workers_telegram ON crm.workers(telegram_username);
CREATE INDEX IF NOT EXISTS idx_workers_email ON crm.workers(email);
CREATE INDEX IF NOT EXISTS idx_workers_hire_date ON crm.workers(hire_date);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è clients - –û–ë–ù–û–í–õ–ï–ù–ù–´–ï
CREATE INDEX IF NOT EXISTS idx_clients_email ON crm.clients(email);
CREATE INDEX IF NOT EXISTS idx_clients_name ON crm.clients(name);
CREATE INDEX IF NOT EXISTS idx_clients_status ON crm.clients(status);
CREATE INDEX IF NOT EXISTS idx_clients_telegram ON crm.clients(telegram);
CREATE INDEX IF NOT EXISTS idx_clients_worker_id ON crm.clients(worker_id); -- üÜï –ò–ù–î–ï–ö–° –î–õ–Ø –ö–£–†–ê–¢–û–†–ê
CREATE INDEX IF NOT EXISTS idx_clients_documents_gin ON crm.clients USING GIN (documents);
CREATE INDEX IF NOT EXISTS idx_clients_data_gin ON crm.clients USING GIN (data); -- üÜï –ò–ù–î–ï–ö–° –î–õ–Ø DATA
CREATE INDEX IF NOT EXISTS idx_clients_documents_inn ON crm.clients USING GIN ((documents->'inn'));
CREATE INDEX IF NOT EXISTS idx_clients_documents_passport ON crm.clients USING GIN ((documents->'passport'));
CREATE INDEX IF NOT EXISTS idx_clients_notes_text ON crm.clients USING GIN (to_tsvector('russian', notes));

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è cash_desks
CREATE INDEX IF NOT EXISTS idx_cash_desks_name ON crm.cash_desks(name);
CREATE INDEX IF NOT EXISTS idx_cash_desks_active ON crm.cash_desks(is_active);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è finances
CREATE INDEX IF NOT EXISTS idx_finances_date ON crm.finances(date);
CREATE INDEX IF NOT EXISTS idx_finances_type ON crm.finances(type);
CREATE INDEX IF NOT EXISTS idx_finances_status ON crm.finances(status);
CREATE INDEX IF NOT EXISTS idx_finances_client_id ON crm.finances(client_id);
CREATE INDEX IF NOT EXISTS idx_finances_cash_desk_id ON crm.finances(cash_desk_id);
CREATE INDEX IF NOT EXISTS idx_finances_worker_id ON crm.finances(worker_id);
CREATE INDEX IF NOT EXISTS idx_finances_transfer_pair_id ON crm.finances(transfer_pair_id);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è client_notes
CREATE INDEX IF NOT EXISTS idx_client_notes_client_id ON crm.client_notes(client_id);
CREATE INDEX IF NOT EXISTS idx_client_notes_author_id ON crm.client_notes(author_id);
CREATE INDEX IF NOT EXISTS idx_client_notes_created_at ON crm.client_notes(created_at);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è clients_status_history
CREATE INDEX IF NOT EXISTS idx_clients_status_history_client_id ON crm.clients_status_history(client_id);
CREATE INDEX IF NOT EXISTS idx_clients_status_history_changed_at ON crm.clients_status_history(changed_at);
CREATE INDEX IF NOT EXISTS idx_clients_status_history_new_status ON crm.clients_status_history(new_status);

-- ‚ö° –¢–†–ò–ì–ì–ï–†–´ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION crm.update_modified_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –¢—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
CREATE OR REPLACE TRIGGER update_users_modtime
    BEFORE UPDATE ON crm.users
    FOR EACH ROW EXECUTE FUNCTION crm.update_modified_column();

CREATE OR REPLACE TRIGGER update_workers_modtime
    BEFORE UPDATE ON crm.workers
    FOR EACH ROW EXECUTE FUNCTION crm.update_modified_column();

CREATE OR REPLACE TRIGGER update_clients_modtime
    BEFORE UPDATE ON crm.clients
    FOR EACH ROW EXECUTE FUNCTION crm.update_modified_column();

CREATE OR REPLACE TRIGGER update_cash_desks_modtime
    BEFORE UPDATE ON crm.cash_desks
    FOR EACH ROW EXECUTE FUNCTION crm.update_modified_column();

CREATE OR REPLACE TRIGGER update_finances_modtime
    BEFORE UPDATE ON crm.finances
    FOR EACH ROW EXECUTE FUNCTION crm.update_modified_column();

CREATE OR REPLACE TRIGGER update_client_notes_modtime
    BEFORE UPDATE ON crm.client_notes
    FOR EACH ROW EXECUTE FUNCTION crm.update_modified_column();

-- –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è clients_status_history
CREATE OR REPLACE FUNCTION crm.log_status_change()
RETURNS TRIGGER AS $$
BEGIN
    -- –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª—Å—è
    IF OLD.status IS DISTINCT FROM NEW.status THEN
        INSERT INTO crm.clients_status_history (
            client_id,
            old_status,
            new_status,
            reason
        ) VALUES (
            NEW.id,
            OLD.status,
            NEW.status,
            '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞'
        );
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –∫ —Ç–∞–±–ª–∏—Ü–µ –∫–ª–∏–µ–Ω—Ç–æ–≤
CREATE OR REPLACE TRIGGER trigger_log_status_change
    AFTER UPDATE ON crm.clients
    FOR EACH ROW EXECUTE FUNCTION crm.log_status_change();

-- üìä –ü–†–ï–î–°–¢–ê–í–õ–ï–ù–ò–Ø (VIEWS) –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏

-- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ª–∏–¥–æ–≤
CREATE OR REPLACE VIEW crm.leads_view AS
SELECT
    c.*,
    w.full_name as curator_name,
    w.position as curator_position,
    CASE
        WHEN c.status = 'CREATED' THEN '–°–æ–∑–¥–∞–Ω'
        WHEN c.status = 'DISTRIBUTION' THEN '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ'
        WHEN c.status = 'GIVE_ACCESS' THEN '–í—ã–¥–∞—á–∞ –¥–æ—Å—Ç—É–ø–æ–≤'
        ELSE '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å'
    END as status_name
FROM crm.clients c
LEFT JOIN crm.workers w ON c.worker_id = w.id
WHERE c.status IN ('CREATED', 'DISTRIBUTION', 'GIVE_ACCESS');

-- –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤
CREATE OR REPLACE VIEW crm.clients_view AS
SELECT
    c.*,
    w.full_name as curator_name,
    w.position as curator_position,
    CASE
        WHEN c.status = 'IN_PROGRESS' THEN '–û–±—É—á–∞–µ—Ç—Å—è'
        WHEN c.status = 'SEARCH_OFFER' THEN '–ò—â–µ—Ç —Ä–∞–±–æ—Ç—É'
        WHEN c.status = 'ACCEPT_OFFER' THEN '–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ñ—Ñ–µ—Ä'
        WHEN c.status = 'PAYING_OFFER' THEN '–í—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç'
        WHEN c.status = 'FINISH' THEN '–ó–∞–∫–æ–Ω—á–∏–ª –æ–±—É—á–µ–Ω–∏–µ'
        ELSE '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å'
    END as status_name
FROM crm.clients c
LEFT JOIN crm.workers w ON c.worker_id = w.id
WHERE c.status IN ('IN_PROGRESS', 'SEARCH_OFFER', 'ACCEPT_OFFER', 'PAYING_OFFER', 'FINISH');

-- –°–≤–æ–¥–∫–∞ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º —Å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø
CREATE OR REPLACE VIEW crm.client_summary AS
SELECT
    c.id,
    c.name,
    c.email,
    c.phone,
    c.telegram,
    c.worker_id, -- üÜï ID –∫—É—Ä–∞—Ç–æ—Ä–∞
    w.full_name as curator_name, -- üÜï –ò–º—è –∫—É—Ä–∞—Ç–æ—Ä–∞
    w.position as curator_position, -- üÜï –î–æ–ª–∂–Ω–æ—Å—Ç—å –∫—É—Ä–∞—Ç–æ—Ä–∞
    c.documents,
    c.data, -- üÜï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    c.status,
    CASE
        WHEN c.status = 'CREATED' THEN '–°–æ–∑–¥–∞–Ω'
        WHEN c.status = 'DISTRIBUTION' THEN '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ'
        WHEN c.status = 'GIVE_ACCESS' THEN '–í—ã–¥–∞—á–∞ –¥–æ—Å—Ç—É–ø–æ–≤'
        WHEN c.status = 'IN_PROGRESS' THEN '–û–±—É—á–∞–µ—Ç—Å—è'
        WHEN c.status = 'SEARCH_OFFER' THEN '–ò—â–µ—Ç —Ä–∞–±–æ—Ç—É'
        WHEN c.status = 'ACCEPT_OFFER' THEN '–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ñ—Ñ–µ—Ä'
        WHEN c.status = 'PAYING_OFFER' THEN '–í—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç'
        WHEN c.status = 'FINISH' THEN '–ó–∞–∫–æ–Ω—á–∏–ª –æ–±—É—á–µ–Ω–∏–µ'
        ELSE '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å'
    END as status_name,
    CASE
        WHEN c.status IN ('CREATED', 'DISTRIBUTION', 'GIVE_ACCESS') THEN 'lead'
        WHEN c.status IN ('IN_PROGRESS', 'SEARCH_OFFER', 'ACCEPT_OFFER', 'PAYING_OFFER', 'FINISH') THEN 'client'
        ELSE 'unknown'
    END as record_type,
    COUNT(f.id) as transactions_count,
    COALESCE(SUM(CASE WHEN f.type = 'income' THEN f.amount ELSE 0 END), 0) as total_income,
    COALESCE(SUM(CASE WHEN f.type = 'expense' THEN f.amount ELSE 0 END), 0) as total_expense,
    COALESCE(SUM(f.amount), 0) as net_amount,
    c.created_at,
    c.updated_at
FROM crm.clients c
LEFT JOIN crm.workers w ON c.worker_id = w.id
LEFT JOIN crm.finances f ON c.id = f.client_id
GROUP BY c.id, c.name, c.email, c.phone, c.telegram, c.worker_id, w.full_name, w.position, c.documents, c.data, c.status, c.created_at, c.updated_at;

-- –°–≤–æ–¥–∫–∞ –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º
CREATE OR REPLACE VIEW crm.finance_summary AS
SELECT
    DATE_TRUNC('month', date) as month,
    status,
    SUM(CASE WHEN type = 'income' THEN amount ELSE 0 END) as monthly_income,
    SUM(CASE WHEN type = 'expense' THEN ABS(amount) ELSE 0 END) as monthly_expense,
    SUM(amount) as monthly_net
FROM crm.finances
GROUP BY DATE_TRUNC('month', date), status
ORDER BY month DESC, status;

-- –°–≤–æ–¥–∫–∞ –ø–æ –∫–∞—Å—Å–∞–º
CREATE OR REPLACE VIEW crm.cash_desk_summary AS
SELECT
    cd.id,
    cd.name,
    cd.current_balance,
    cd.description,
    cd.is_active,
    COUNT(f.id) as transactions_count,
    COALESCE(SUM(CASE WHEN f.type = 'income' THEN f.amount ELSE 0 END), 0) as total_income,
    COALESCE(SUM(CASE WHEN f.type = 'expense' THEN f.amount ELSE 0 END), 0) as total_expense,
    COALESCE(SUM(f.amount), 0) as calculated_balance,
    cd.created_at,
    cd.updated_at
FROM crm.cash_desks cd
LEFT JOIN crm.finances f ON cd.id = f.cash_desk_id AND f.status = 'actual'
GROUP BY cd.id, cd.name, cd.current_balance, cd.description, cd.is_active, cd.created_at, cd.updated_at;

-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–æ—Ä–æ–Ω–∫–∏ –ª–∏–¥–æ–≤
CREATE OR REPLACE VIEW crm.lead_funnel_stats AS
SELECT
    status,
    CASE
        WHEN status = 'CREATED' THEN '–°–æ–∑–¥–∞–Ω'
        WHEN status = 'DISTRIBUTION' THEN '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ'
        WHEN status = 'GIVE_ACCESS' THEN '–í—ã–¥–∞—á–∞ –¥–æ—Å—Ç—É–ø–æ–≤'
        ELSE '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å'
    END as status_name,
    COUNT(*) as count,
    ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (), 2) as percentage
FROM crm.clients
WHERE status IN ('CREATED', 'DISTRIBUTION', 'GIVE_ACCESS')
GROUP BY status
ORDER BY
    CASE status
        WHEN 'CREATED' THEN 1
        WHEN 'DISTRIBUTION' THEN 2
        WHEN 'GIVE_ACCESS' THEN 3
        ELSE 4
    END;

-- –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø–∏—Å–µ–π
CREATE OR REPLACE VIEW crm.records_stats AS
SELECT
    'leads' as type,
    COUNT(*) as count,
    COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '30 days' THEN 1 END) as new_this_month
FROM crm.clients
WHERE status IN ('CREATED', 'DISTRIBUTION', 'GIVE_ACCESS')
UNION ALL
SELECT
    'clients' as type,
    COUNT(*) as count,
    COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '30 days' THEN 1 END) as new_this_month
FROM crm.clients
WHERE status IN ('IN_PROGRESS', 'SEARCH_OFFER', 'ACCEPT_OFFER', 'PAYING_OFFER', 'FINISH');

-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
CREATE OR REPLACE VIEW crm.documents_completeness AS
SELECT
    id,
    name,
    email,
    status,
    CASE WHEN documents ? 'inn' THEN 1 ELSE 0 END as has_inn,
    CASE WHEN documents ? 'passport' THEN 1 ELSE 0 END as has_passport,
    CASE WHEN documents ? 'snils' THEN 1 ELSE 0 END as has_snils,
    CASE WHEN documents ? 'diploma' THEN 1 ELSE 0 END as has_diploma,
    (CASE WHEN documents ? 'inn' THEN 1 ELSE 0 END +
     CASE WHEN documents ? 'passport' THEN 1 ELSE 0 END +
     CASE WHEN documents ? 'snils' THEN 1 ELSE 0 END +
     CASE WHEN documents ? 'diploma' THEN 1 ELSE 0 END) as completeness_score
FROM crm.clients;

-- üéØ –ù–ê–ß–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï

-- –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
INSERT INTO crm.users (email, password_hash, name, role, is_active)
VALUES (
    'admin@crm.local',
    '$2b$12$R.xLDrE8QrH1894FJiEsz.ciD7Hf35T8BTIZsM/b5nrUSuWNRExse', -- –ø–∞—Ä–æ–ª—å: admin123
    '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    'admin',
    true
) ON CONFLICT (email) DO NOTHING;

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Å—Å—ã
INSERT INTO crm.cash_desks (name, description, current_balance, is_active)
VALUES
    ('–û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Å—Å–∞', '–ì–ª–∞–≤–Ω–∞—è –∫–∞—Å—Å–∞ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π', 0.00, true),
    ('–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç', '–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç', 0.00, true)
ON CONFLICT DO NOTHING;