// backend/middleware/errorHandler.js

// üö® –¢–ò–ü–´ –û–®–ò–ë–û–ö –ò –ò–• –ö–û–î–´
const ERROR_CODES = {
  // Database errors
  UNIQUE_VIOLATION: '23505',
  NOT_NULL_VIOLATION: '23502',
  FOREIGN_KEY_VIOLATION: '23503',
  CHECK_VIOLATION: '23514',

  // Custom error types
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  AUTHENTICATION_ERROR: 'AUTHENTICATION_ERROR',
  AUTHORIZATION_ERROR: 'AUTHORIZATION_ERROR',
  NOT_FOUND_ERROR: 'NOT_FOUND_ERROR',
  BUSINESS_LOGIC_ERROR: 'BUSINESS_LOGIC_ERROR'
};

// üìù –û–ü–ò–°–ê–ù–ò–Ø –û–®–ò–ë–û–ö –ù–ê –†–£–°–°–ö–û–ú
const ERROR_MESSAGES = {
  [ERROR_CODES.UNIQUE_VIOLATION]: '–ó–∞–ø–∏—Å—å —Å —Ç–∞–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
  [ERROR_CODES.NOT_NULL_VIOLATION]: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ',
  [ERROR_CODES.FOREIGN_KEY_VIOLATION]: '–°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å',
  [ERROR_CODES.CHECK_VIOLATION]: '–ù–∞—Ä—É—à–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö',

  [ERROR_CODES.VALIDATION_ERROR]: '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
  [ERROR_CODES.AUTHENTICATION_ERROR]: '–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏',
  [ERROR_CODES.AUTHORIZATION_ERROR]: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞',
  [ERROR_CODES.NOT_FOUND_ERROR]: '–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π —Ä–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω',
  [ERROR_CODES.BUSINESS_LOGIC_ERROR]: '–ù–∞—Ä—É—à–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏'
};

// üè• –ö–ê–°–¢–û–ú–ù–´–ï –ö–õ–ê–°–°–´ –û–®–ò–ë–û–ö
class AppError extends Error {
  constructor(message, statusCode, errorCode = null, details = null) {
    super(message);
    this.statusCode = statusCode;
    this.errorCode = errorCode;
    this.details = details;
    this.isOperational = true;

    Error.captureStackTrace(this, this.constructor);
  }
}

class ValidationError extends AppError {
  constructor(message, details = null) {
    super(message, 400, ERROR_CODES.VALIDATION_ERROR, details);
  }
}

class AuthenticationError extends AppError {
  constructor(message = '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è') {
    super(message, 401, ERROR_CODES.AUTHENTICATION_ERROR);
  }
}

class AuthorizationError extends AppError {
  constructor(message = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞') {
    super(message, 403, ERROR_CODES.AUTHORIZATION_ERROR);
  }
}

class NotFoundError extends AppError {
  constructor(resource = '–†–µ—Å—É—Ä—Å') {
    super(`${resource} –Ω–µ –Ω–∞–π–¥–µ–Ω`, 404, ERROR_CODES.NOT_FOUND_ERROR);
  }
}

class BusinessLogicError extends AppError {
  constructor(message) {
    super(message, 422, ERROR_CODES.BUSINESS_LOGIC_ERROR);
  }
}

// üîß –û–ë–†–ê–ë–û–¢–ß–ò–ö –û–®–ò–ë–û–ö –ë–î POSTGRESQL
const handleDatabaseError = (err) => {
  console.error('Database error:', {
    code: err.code,
    detail: err.detail,
    constraint: err.constraint,
    table: err.table,
    column: err.column
  });

  switch (err.code) {
    case ERROR_CODES.UNIQUE_VIOLATION:
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–µ –ø–æ–ª–µ –Ω–∞—Ä—É—à–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
      if (err.constraint && err.constraint.includes('email')) {
        return new ValidationError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      }
      if (err.constraint && err.constraint.includes('name')) {
        return new ValidationError('–ó–∞–ø–∏—Å—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      }
      return new ValidationError(ERROR_MESSAGES[ERROR_CODES.UNIQUE_VIOLATION]);

    case ERROR_CODES.NOT_NULL_VIOLATION:
      const field = err.column || '–ø–æ–ª–µ';
      return new ValidationError(`–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ "${field}" –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ`);

    case ERROR_CODES.FOREIGN_KEY_VIOLATION:
      return new ValidationError('–°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å');

    case ERROR_CODES.CHECK_VIOLATION:
      return new ValidationError('–ù–∞—Ä—É—à–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö');

    default:
      return new AppError('–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö', 500, 'DATABASE_ERROR');
  }
};

// üîß –û–ë–†–ê–ë–û–¢–ß–ò–ö JWT –û–®–ò–ë–û–ö
const handleJWTError = (err) => {
  if (err.name === 'JsonWebTokenError') {
    return new AuthenticationError('–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω');
  }
  if (err.name === 'TokenExpiredError') {
    return new AuthenticationError('–¢–æ–∫–µ–Ω –∏—Å—Ç—ë–∫');
  }
  if (err.name === 'NotBeforeError') {
    return new AuthenticationError('–¢–æ–∫–µ–Ω –µ—â—ë –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω');
  }
  return new AuthenticationError('–û—à–∏–±–∫–∞ —Ç–æ–∫–µ–Ω–∞');
};

// üè• –ì–õ–ê–í–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –û–®–ò–ë–û–ö
const errorHandler = (err, req, res, next) => {
  let error = err;

  // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.error('Error occurred:', {
    message: err.message,
    stack: err.stack,
    url: req.url,
    method: req.method,
    timestamp: new Date().toISOString(),
    user: req.user?.email || 'anonymous'
  });

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
  if (err.code && err.code.startsWith('23')) {
    // PostgreSQL –æ—à–∏–±–∫–∏
    error = handleDatabaseError(err);
  } else if (err.name && err.name.includes('JsonWebToken')) {
    // JWT –æ—à–∏–±–∫–∏
    error = handleJWTError(err);
  } else if (!(err instanceof AppError)) {
    // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏
    error = new AppError('–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', 500, 'INTERNAL_ERROR');
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
  const response = {
    success: false,
    error: error.message,
    timestamp: new Date().toISOString(),
    traceId: req.traceId || 'no-trace-id'
  };

  // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –≤ development —Ä–µ–∂–∏–º–µ –∏–ª–∏ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  if (process.env.NODE_ENV === 'development' || error.errorCode === ERROR_CODES.VALIDATION_ERROR) {
    if (error.details) {
      response.details = error.details;
    }
    if (error.errorCode) {
      response.errorCode = error.errorCode;
    }
  }

  // –î–æ–±–∞–≤–ª—è–µ–º stack trace —Ç–æ–ª—å–∫–æ –≤ development
  if (process.env.NODE_ENV === 'development') {
    response.stack = error.stack;
  }

  res.status(error.statusCode || 500).json(response);
};

// üö´ –û–ë–†–ê–ë–û–¢–ß–ò–ö 404 –û–®–ò–ë–û–ö
const notFoundHandler = (req, res, next) => {
  const error = new NotFoundError(`–ú–∞—Ä—à—Ä—É—Ç ${req.originalUrl}`);
  error.traceId = req.traceId || 'no-trace-id';
  next(error);
};

// üíî –û–ë–†–ê–ë–û–¢–ß–ò–ö –ù–ï–û–ë–†–ê–ë–û–¢–ê–ù–ù–´–• –û–®–ò–ë–û–ö
const unhandledErrorHandler = () => {
  process.on('uncaughtException', (err) => {
    console.error('UNCAUGHT EXCEPTION! üí• Shutting down...');
    console.error(err.name, err.message);
    console.error(err.stack);
    process.exit(1);
  });

  process.on('unhandledRejection', (err) => {
    console.error('UNHANDLED REJECTION! üí• Shutting down...');
    console.error(err.name, err.message);
    console.error(err.stack);
    process.exit(1);
  });
};

// üîß –û–ë–ï–†–¢–ö–ê –î–õ–Ø ASYNC –§–£–ù–ö–¶–ò–ô
const asyncHandler = (fn) => {
  return (req, res, next) => {
    Promise.resolve(fn(req, res, next)).catch(next);
  };
};

// üõ°Ô∏è –ü–†–û–í–ï–†–ö–ê –°–£–©–ï–°–¢–í–û–í–ê–ù–ò–Ø –†–ï–°–£–†–°–ê
const checkResourceExists = (resource, resourceName = '–†–µ—Å—É—Ä—Å') => {
  return (req, res, next) => {
    if (!resource || (Array.isArray(resource) && resource.length === 0)) {
      throw new NotFoundError(resourceName);
    }
    next();
  };
};

module.exports = {
  // –ö–ª–∞—Å—Å—ã –æ—à–∏–±–æ–∫
  AppError,
  ValidationError,
  AuthenticationError,
  AuthorizationError,
  NotFoundError,
  BusinessLogicError,

  // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
  ERROR_CODES,
  ERROR_MESSAGES,

  // Middleware
  errorHandler,
  notFoundHandler,
  unhandledErrorHandler,
  asyncHandler,
  checkResourceExists,

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  handleDatabaseError,
  handleJWTError
};